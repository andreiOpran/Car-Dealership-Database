SELECT --CLAUZA OBLIGATORIE CAND SE SCRIE COMANDA SELECT
    UPPER(FIRST_NAME) AS NUME_MAJ, --UN ALIAS SE POATE ADAUGA CU SAU FARA UTILIZAREA LUI 'AS'
    EMPLOYEE_ID "Id angajat", --DACA ETICHETA CONTINE CARACTERE 'BLANK', ATUNCI ETICHETA SE TRECE INTRE GHILIMELE
    SALARY * 12
--CAMPURILE DIN CLAUZA SELECT SE SEPARA PRIN VIRGULA SI POT FI
                                    -- COLOANE ALE TABELULUI/TABELELOR DIN CLAUZA FROM,
                                    -- OPERATII APLICATE ASUPRA ANUMITOR COLOANE,
                                    -- FUNCTII APLICATE ASUPRA ANUMITOR COLOANE
                                    -- SUBCERERI
FROM EMPLOYEES --CLAUZA OBLIGATORIE CAND SE SCRIE COMANDA SELECT
WHERE SALARY != 10000
        --DACA UN QUERY ARE MAI MULTE CONDITII, NU SE SCRIU MAI MULTE CLAUZA WHERE,
            --CI SE SEPARA CONDITIILE FOLOSIND OPERATORII LOGICI 'AND', 'OR', 'NOT'
        --OPERATORI DE COMPARATIE (=, <>/!=, <, <=, >, >=)
ORDER BY SALARY DESC, HIRE_DATE;
        --PENTRU FIECARE CRITERIU DE SORTARE TREBUIE SPECIFICAT TIPUL DE SORTARE (ASC/DESC)
        --DACA NU SE SPECIFICA CRITERIUL DE SORTARE, BY DEFAULT ESTE ASC

SELECT
    EMPLOYEE_ID,
    FIRST_NAME
FROM EMPLOYEES;
--SAU
SELECT
    EMPLOYEES.EMPLOYEE_ID,
    EMPLOYEES.FIRST_NAME
FROM EMPLOYEES;
--SAU
SELECT
    E.EMPLOYEE_ID,
    E.FIRST_NAME
FROM EMPLOYEES E;
--SAU
SELECT
    "TABEL ANGAJATI".EMPLOYEE_ID,
    "TABEL ANGAJATI".FIRST_NAME
FROM EMPLOYEES "TABEL ANGAJATI";
--ETICHETAREA TABELELOR ESTE RECOMANDATA ATUNCI CAND CERERILE SUNT MAI COMPLEXE SI:
    --FIE SE LUCREAZA CU MAI MULTE INSTANTE ALE UNUI ACELUIASI TABEL SI TREBUIE DIFERENTIATE COLOANELE UTILIZATE
SELECT
    EMPLOYEE_ID,
    FIRST_NAME
FROM EMPLOYEES, EMPLOYEES; --COMPILATORUL NU STIE DACA COLOANELE DIN SELECT TIN DE PRIMA SAU DE A DOUA INSTANTA A LUI EMPLOYEES

    --FIE SE LUCREAZA CU TABELE CARE AU COLOANE CU ACEEASI DENUMIRE
SELECT
    MANAGER_ID,
    DEPARTMENT_ID
FROM EMPLOYEES, DEPARTMENTS; --COMPILATORUL NU STIE DACA COLOANELE DIN SELECT TIN DE TABELUL EMPLOYEES SAU DE TABELUL DEPARTMENTS (CELE 2 COLOANE APAR IN AMBELE TABELE)

--3
DESC EMPLOYEES;

--4
SELECT * FROM EMPLOYEES; --* AJUTA LA AFISAREA TUTUROR COLOANELOR TABELULUI/TABELELOR DIN CLAUZA FROM

SELECT *, EMPLOYEE_ID FROM EMPLOYEES; --DACA S-A UTILIZAT * IN CLAUZA SELECT, ATUNCI NU SE POT ADAUGA SI ALTE CAMPURI PARTICULARE IN CLAUZA

--5
SELECT
    EMPLOYEE_ID,
    FIRST_NAME,
    JOB_ID,
    HIRE_DATE
FROM EMPLOYEES;

--6
SELECT DISTINCT JOB_ID
FROM EMPLOYEES;

SELECT UNIQUE JOB_ID
FROM EMPLOYEES;

--7
SELECT
    FIRST_NAME || ', ' || JOB_ID --STRING-URILE SE DEFINESC CU APOSTROF, NU CU GHILIMELE
                                    -- '' -> ECHIVALENT LUI NULL
                                    --CU GHILIMELE SE DEFINESC DOAR ALIAS-URILE
FROM EMPLOYEES;

--8
SELECT
    FIRST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY >= 2850;

--9
SELECT
    FIRST_NAME,
    DEPARTMENT_ID
FROM EMPLOYEES
WHERE EMPLOYEE_ID = 104;

--10
SELECT FIRST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY NOT BETWEEN 1500 AND 2850;

--11
SELECT FIRST_NAME, JOB_ID, HIRE_DATE
FROM EMPLOYEES
WHERE HIRE_DATE BETWEEN '20-FEB-1987' AND '01-MAY-1989';

--12
SELECT FIRST_NAME, DEPARTMENT_ID
FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (10, 30)
ORDER BY FIRST_NAME;

--13
SELECT
    FIRST_NAME AS ANGAJAT,
    SALARY * 12 "SALARIU ANUAL"
FROM EMPLOYEES
WHERE (SALARY >= 1500) AND
        (DEPARTMENT_ID IN (10, 30))

--14
SELECT 
    FIRST_NAME, JOB_ID
FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL;

--PENTRU A VERIFICA DACA O COLOANA ESTE NULL SAU NU,
    --SE VA FOLOSI IS/IS NOT

-- CONDITIILE MANAGER_ID = NULL SI MANAGER_ID != NULL VOR RETURN 'UNKNOWN', NU 'TRUE'/'FALSE'

-- FALSE AND UNKNOWN -> FALSE
-- TRUE OR UNKNOWN -> TRUE

--15
SELECT
    EMPLOYEE_ID, SALARY, COMMISSION_PCT
FROM EMPLOYEES
WHERE COMMISSION_PCT IS NOT NULL;

SELECT
    EMPLOYEE_ID, SALARY, COMMISSION_PCT
FROM EMPLOYEES
ORDER BY SALARY DESC, COMMISSION_PCT DESC;
--LA SORTARE DESC, NULL APARE INAINTEA VALORILOR NUMERICE
--LA SORTARE CRESC, NULL APARE DUPA VALORILE NUMERICE

--16
SELECT FIRST_NAME
FROM EMPLOYEES
WHERE UPPER(FIRST_NAME) LIKE '__A%';

--17
SELECT FIRST_NAME
FROM EMPLOYEES
WHERE UPPER(FIRST_NAME) LIKE '%L%L%' AND
        (DEPARTMENT_ID = 50 OR MANAGER_ID = 102);

--18
SELECT FIRST_NAME, JOB_ID, SALARY
FROM EMPLOYEES
WHERE UPPER(JOB_ID) LIKE '%CLERK%'
        OR UPPER(JOB_ID) LIKE '%REP%' AND
        (SALARY NOT IN (1000, 2000, 3000));