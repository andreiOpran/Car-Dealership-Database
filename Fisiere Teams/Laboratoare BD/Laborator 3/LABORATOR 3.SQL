-------------------------LCD
-- COMMIT -> PERMANENTIZEAZA MODIFICARILE
-- ROLLBACK -> ANULEAZA MODIFICARILE PANA LA ULTIMUL COMMIT EXECUTAT
-- SAVEPOINT -> MARCHEAZA PUNCT INTERMEDIAR IN TRANZACTIE (SE POATE FACE ROLLBACK DOAR PANA LA PUNCTUL RESPECTIV)

-- PRIN MODIFICARI SE INTELEGE APLICAREA COMENZILOR: INSERT, UPDATE, DELETE
-- RULAREA UNEI COMENZI DE TIP LDD (CREATE, ALTER, DROP, TRUNCATE, RENAME) ADUCE IMPLICIT SI RULAREA UNUI COMMIT


    --EXEMPLU 1
-- TABEL_TEST ()
-- INSERT 1 => TABEL_TEST(1)
-- INSERT 2 => TABEL_TEST(1,2)
-- COMMIT => TABEL_TEST(1,2)
-- ROLLBACK => TABEL_TEST(1,2)
-- INSERT (3) => TABEL_TEST(1,2,3)
-- ROLLBACK => TABEL_TEST(1,2)

    --EXEMPLU 2
-- TABEL_TEST ()
-- INSERT 1 => TABEL_TEST(1)
-- INSERT 2 => TABEL_TEST(1,2)
-- CREATE (+COMMIT IMPLICIT) => TABEL_TEST(1,2)
-- INSERT (3) => TABEL_TEST(1,2,3)
-- SAVEPOINT P
-- INSERT (4) => TABEL_TEST(1,2,3,4)
-- ROLLBACK TO P => TABEL_TEST(1,2,3)

    --EXEMPLU 3
-- TABEL_TEST ()
-- INSERT 1 => TABEL_TEST(1)
-- INSERT 2 => TABEL_TEST(1,2)
-- CREATE (+COMMIT IMPLICIT) => TABEL_TEST(1,2)
-- INSERT (3) => TABEL_TEST(1,2,3)
-- SAVEPOINT P
-- INSERT (4) => TABEL_TEST(1,2,3,4)
-- ROLLBACK => TABEL_TEST(1,2)

    --EXEMPLU 4
-- TABEL_TEST ()
-- INSERT 1 => TABEL_TEST(1)
-- INSERT 2 => TABEL_TEST(1,2)
-- SAVEPOINT P
-- CREATE (+COMMIT IMPLICIT) => TABEL_TEST(1,2)
-- INSERT (3) => TABEL_TEST(1,2,3)
-- INSERT (4) => TABEL_TEST(1,2,3,4)
-- ROLLBACK TO P => EROARE COMPILARE

-------------------------LDD
    --CREARE TABELE

    -- METODA 1
-- MAI INTAI SE TRECE LISTA DE COLOANE, IAR PE URMA LISTA DE CONSTRANGERI LA NIVEL DE TABEL
-- PENTRU FIECARE COLOANA SE SPECIFICA NUMELE, TIPUL DE DATE SI EVENTUAL O VALOARE DEFAULT SAU O CONSTRANGERE LA NIVEL DE COLOANA
-- CONSTRANGERILE LA NIVEL DE COLOANA POT LUCRA DOAR CU COLOANA IN DREPTUL CAREIA ESTE TRECUTA
-- CONSTRANGERILE LA NIVEL DE TABEL POT LUCRA CU MAI MULTE COLOANE ALE TABELULUI
    -- (CUM AR FI PRIMARY KEY-URILE COMPUSE SAU CONSTRANGERILE DE TIP CHECK A CAROR CONDITIE LUCREAZA CU MAI MULTE COLAONE ALE TABELULUI)

CREATE TABLE ECHIPE (
    ID_ECHIPA NUMBER(10),
    NUME_ECHIPA VARCHAR2(10) NOT NULL, --CONSTRANGERE LA NIVEL DE COLOANA
    DATA_INFIINTARE DATE DEFAULT SYSDATE,
    VENIT_ANUAL NUMBER(10, 2),
    ABREVIERE_NUME VARCHAR2(3) CONSTRAINT VERIF_LG CHECK ( LENGTH(ABREVIERE_NUME) = 3), --CONSTRANGERE LA NIVEL DE COLOANA
    CONSTRAINT CHEIE_PRIMARA PRIMARY KEY (ID_ECHIPA), --CONSTRANGERE LA NIVEL DE TABEL
    CHECK ( VENIT_ANUAL > 100000 ) --CONSTRANGERE LA NIVEL DE TABEL
);
-- CONSTRANGERILE DE TIP NOT NULL SE PUN DOAR LA NIVEL DE COLOANA
-- CONSTRANGEREA DE LA LINIA 62 VA FI SALVATA CU NUMELE 'CHEIE_PRIMARA'
-- CONSTRANGEREA DE LA LINIA 63 VA FI SALVATA CU NUMELE 'SYS_...'
-- PENTRU A DA UN NUME PARTICULAR UNEI CONSTRANGERI SE FOLOSESTE SINTAXA 'CONSTRAINT <nume constrangere> <sintaxa specifica constrangerii respective>'

-- ATUNCI CAND SE FACE UN INSERT IMPLICIT, NESPECIFICANDU-SE O VALOARE PENTRU O COLOANA, ACEASTA VA PRIMI VALOAREA NULL,
    -- DAR DACA ESTE DEFINITA O VALOARE DEFAULT PE COLOANA RESPECTIVA, IN LOC DE NULL SE VA INSERA VALOAREA DEFAULT

CREATE TABLE JUCATORI (
    ID_JUCATOR NUMBER(10),
    NUME_JUCATOR VARCHAR2(10),
    NUMAR_TRICOU NUMBER(10),
    ECHIPA_ID NUMBER(10),
    CONSTRAINT CHEIE_PRIMARA_2 PRIMARY KEY (ID_JUCATOR),
    CONSTRAINT NR_TRICOU_UNIC UNIQUE (NUMAR_TRICOU),
    CONSTRAINT FK_JUC_ECH FOREIGN KEY (ECHIPA_ID)
            REFERENCES ECHIPE(ID_ECHIPA)
);

-- ATENTIE! CONSTRANGERILE TREBUIE SA AIBE NUME UNIC LA NIVELUL SERVERULUI, NU AL TABELULUI
    -- DACA IN 'ECHIPE' AM O CONSTRANGERE CU NUMELE 'CHEIE_PRIMARA', NU POT AVEA SI IN ALTE TABELE CONSTRANGERI CU ACEASTA DENUMIRE
-- IN CAZUL CONSTRANGERILOR DE TIP FOREIGN KEY SE POATE FACE REFERINTA DOAR CATRE COLOANE CARE IN TABELUL REFERENTIAT AU CONSTRANGERE DE TIP PRIMARY KEY SAU UNIQUE

--METODA 2
CREATE TABLE COPIE_EMPLOYEES AS
    SELECT EMPLOYEE_ID, SALARY * 12
    FROM EMPLOYEES; -- SE VA CREA UN TABEL CARE VA AVEA STRUCTURA DETERMINATA DE CAMPURILE DIN CLAUZA SELECT SI VA CONTINE INREGISTRARILE SUBCERERII SPECIFICATE (SELECT)
-- ATUNCI CAND SE CREEAZA UN TABEL CU ACEASTA METODA, SE VOR PRELUA DIN TABELUL/TABELELE DIN CLAUZA FROM DOAR CONSTRANGERILE DE TIP NOT NULL


    -- MODIFICARE LA NIVEL STRUCTURAL A TABELELOR (LA NIVEL DE COLOANE SAU CONSTRANGERI)
--ALTER
    -- ADAUGARE COLOANE
ALTER TABLE JUCATORI
ADD NR_GOLURI NUMBER(10) DEFAULT 0;

    -- MODIFICARE COLOANA (TIP DE DATE, DIMENSIUNE, VALOARE DEFAULT)
ALTER TABLE JUCATORI
MODIFY NR_GOLURI VARCHAR2(10); --DOAR DACA PE COLOANA RESPECTIVA NU EXISTA VALORI NENULE SAU IN TABEL NU EXISTA INREGISTRARI

ALTER TABLE JUCATORI
MODIFY NR_GOLURI NUMBER(5); --DOAR DACA PE COLOANA RESPECTIVA NU EXISTA VALORI NENULE SAU IN TABEL NU EXISTA INREGISTRARI

ALTER TABLE JUCATORI
MODIFY NR_GOLURI VARCHAR2(5); --DOAR DACA PE COLOANA RESPECTIVA NU EXISTA VALORI NENULE SAU IN TABEL NU EXISTA INREGISTRARI SAU SIRURILE DEJA EXISTENTE RESPECTA NOUA DIMENSIUNE

ALTER TABLE JUCATORI
MODIFY NR_GOLURI VARCHAR2(15); --CRESTEREA DIMENSIUNII SE POATE FACE ORICAND

    -- STERGERE COLOANE
ALTER TABLE JUCATORI
DROP COLUMN NR_GOLURI;

    -- ADAUGARE CONSTRANGERI
ALTER TABLE JUCATORI
ADD (
        CONSTRAINT VERIF_NR_TRICOU CHECK ( NUMAR_TRICOU >= 1 AND NUMAR_TRICOU <= 99 ),
        CONSTRAINT LG_NUME CHECK ( LENGTH(NUME_JUCATOR) >= 5 )
    );

    -- STERGERE CONSTRANGERI
ALTER TABLE JUCATORI
DROP CONSTRAINT LG_NUME;

    -- DEZACTIVARE CONSTRANGERI
-- ATENTIE! ATUNCI CAND DEZACTIVATI O CONSTRANGERE SI MODIFICATI DATELE TABELULUI, IN MOMENTUL IN CARE O REACTIVATI ESTE NECESAR CA DATELE MODIFICATE SA RESPECTE CONDITIA IMPUSA DE CONSTRANGERE, IN CAZ CONTRAR, NU SE VA PUTEA REACTIVA
ALTER TABLE JUCATORI
DISABLE CONSTRAINT VERIF_NR_TRICOU;

ALTER TABLE JUCATORI
ENABLE CONSTRAINT VERIF_NR_TRICOU;

    -- STERGEREA TABELELOR
--DROP
-- ATENTIE! ATUNCI CAND STERGETI UN TABEL, TREBUIE SA FIE MAI INTAI STERSE SI CONSTRANGERILE DE TIP FOREIGN KEY CARE REFERENTIAZA CATRE TABELUL IN CAUZA (IN ACEST CAZ, CONSTRANGEREA DE TIP FK DIN JUCATORI)
DROP TABLE ECHIPE;

--------------------------------------------------------------------------------------------------------------
-- EXEMPLU DIAGRAMA RESTAURANT
--CREARE TABELE
CREATE TABLE COUNTRIES_EMPLOYEES(
    country_id NUMBER(5) CONSTRAINT CHEIE_PRIMARA_CE PRIMARY KEY,
    country_name VARCHAR2(50) NOT NULL
);

CREATE TABLE LOCATION_EMPLOYEES(
    location_id NUMBER(5) CONSTRAINT CHEIE_PRIMARA_LE PRIMARY KEY,
    street VARCHAR2(50) NOT NULL,
    city VARCHAR2(50) NOT NULL,
    country_id NUMBER(5) NOT NULL
);

CREATE TABLE RESTAURANT_DEPARTMENTS(
    department_id NUMBER(5) CONSTRAINT CHEIE_PRIMARA_RD PRIMARY KEY,
    department_name VARCHAR2(50) NOT NULL,
    number_max_employees NUMBER(5)
);

CREATE TABLE RESTAURANT_JOBS(
    job_id NUMBER(5) CONSTRAINT CHEIE_PRIMARA_RJ PRIMARY KEY,
    job_name VARCHAR2(50) NOT NULL,
    min_salary NUMBER(5)  NOT NULL,
    max_salary NUMBER(5),
    department_id NUMBER(5) NOT NULL
);

CREATE TABLE RESTAURANT_EMPLOYEES(
    employee_id NUMBER(5) CONSTRAINT CHEIE_PRIMARA_RE PRIMARY KEY,
    first_name VARCHAR2(50) NOT NULL,
    last_name VARCHAR2(50) NOT NULL,
    email VARCHAR2(50) NOT NULL,
    phone_number VARCHAR2(50) NOT NULL,
    salary NUMBER(5) NOT NULL,
    job_id NUMBER(5) NOT NULL,
    superior_id NUMBER(5),
    location_id NUMBER(5),
    hire_date DATE DEFAULT SYSDATE
);

CREATE TABLE SECTIONS(
    section_id NUMBER(5) CONSTRAINT CHEIE_PRIMARA_S PRIMARY KEY,
    section_name VARCHAR2(50) NOT NULL,
    smoking_area CHAR(1)
);

CREATE TABLE TABLES(
    table_id NUMBER(5),
    section_id NUMBER(5),
    number_chairs NUMBER(5) DEFAULT 2,
    status VARCHAR2(50) DEFAULT 'NOT BOOKED' NOT NULL,
    CONSTRAINT CHEIE_PRIMARA_T PRIMARY KEY (table_id, section_id)
);

CREATE TABLE CUSTOMERS(
    customer_id NUMBER(5) CONSTRAINT CHEIE_PRIMARA_C PRIMARY KEY,
    first_name VARCHAR2(50) NOT NULL,
    last_name VARCHAR2(50) NOT NULL,
    email VARCHAR2(50) NOT NULL,
    phone_number VARCHAR2(50) NOT NULL
);

CREATE TABLE BOOKINGS(
  customer_id NUMBER(5),
  table_id NUMBER(5),
  section_id NUMBER(5),
  reservation_date DATE DEFAULT SYSDATE,
  nr_hours NUMBER(5) DEFAULT 1 NOT NULL,
  CONSTRAINT CHEIE_PRIMARA_B PRIMARY KEY (customer_id, table_id, section_id)
);

CREATE TABLE DRINKS(
    drink_id NUMBER(5) CONSTRAINT CHEIE_PRIMARA_D PRIMARY KEY,
    drink_name VARCHAR2(50) NOT NULL,
    quantity NUMBER(5) NOT NULL
);

CREATE TABLE MEALS(
    meal_id NUMBER(5) CONSTRAINT CHEIE_PRIMARA_M PRIMARY KEY,
    meal_name VARCHAR2(50) NOT NULL,
    quantity NUMBER(5) NOT NULL,
    employee_id NUMBER(5)
);

CREATE TABLE MENU_DRINK(
    menu_id NUMBER(5),
    drink_id NUMBER(5),
    CONSTRAINT CHEIE_PRIMARA_MD PRIMARY KEY (menu_id, drink_id)
);

CREATE TABLE MENU_MEAL(
    menu_id NUMBER(5),
    meal_id NUMBER(5),
    CONSTRAINT CHEIE_PRIMARA_MM PRIMARY KEY (menu_id, meal_id)
);

CREATE TABLE MENUS(
    menu_id NUMBER(5) CONSTRAINT CHEIE_PRIMARA_M PRIMARY KEY,
    menu_name VARCHAR2(50) NOT NULL,
    price NUMBER(5,2) NOT NULL
);

CREATE TABLE ORDERS(
  order_id NUMBER(5) CONSTRAINT CHEIE_PRIMARA_O PRIMARY KEY,
  status VARCHAR2(50) NOT NULL,
  customer_id NUMBER(5),
  employee_id NUMBER(5)
);

CREATE TABLE ORDER_MENU(
    order_id NUMBER(5),
    menu_id NUMBER(5),
    quantity NUMBER(5) NOT NULL,
    CONSTRAINT CHEIE_PRIMARA_OM PRIMARY KEY (order_id, menu_id)
);

--ADAUGARE CONSTRANGERI
ALTER TABLE LOCATION_EMPLOYEES
    ADD CONSTRAINT FK_COUNTRY FOREIGN KEY (country_id) REFERENCES COUNTRIES_EMPLOYEES(country_id);

ALTER TABLE RESTAURANT_JOBS
    ADD CONSTRAINT FK_DEPARTMENT FOREIGN KEY (department_id) REFERENCES RESTAURANT_DEPARTMENTS(department_id);

ALTER TABLE SECTIONS
    ADD CONSTRAINT CHECK_SMOKING_AREA CHECK ( smoking_area IN ('Y', 'N') );

ALTER TABLE TABLES
    ADD CONSTRAINT PK_TABLE_SECTION PRIMARY KEY (table_id, section_id)
    ADD CONSTRAINT FK_SECTION FOREIGN KEY (section_id) REFERENCES SECTIONS(section_id);

ALTER TABLE CUSTOMERS
    ADD CONSTRAINT CHECK_EMAIL CHECK( REGEXP_LIKE (email, '[a-z0-9]+@[a-z]+\.[a-z]{2,3}'))
    ADD CONSTRAINT CHECK_PHONE_NUMBER CHECK ( REGEXP_LIKE(phone_number, '^(\+4|)?(07[0-8]{1}[0-9]{1}|02[0-9]{2}|03[0-9]{2}){1}?(\s|\.|\-)?([0-9]{3}(\s|\.|\-|)){2}$') );

ALTER TABLE BOOKINGS
    ADD CONSTRAINT PK_CUSTOMER_TABLE_SECTION PRIMARY KEY (customer_id, table_id, section_id, reservation_date)
    ADD CONSTRAINT FK_CUSTOMER FOREIGN KEY (customer_id) REFERENCES CUSTOMERS(customer_id)
    ADD CONSTRAINT FK_TABLE_SECTION FOREIGN KEY (table_id, section_id) REFERENCES TABLES(table_id, section_id);

ALTER TABLE RESTAURANT_EMPLOYEES
    ADD CONSTRAINT FK_JOB FOREIGN KEY (job_id) REFERENCES RESTAURANT_JOBS(job_id)
    ADD CONSTRAINT CHECK_EMAIL_EMPLOYEE CHECK( REGEXP_LIKE (email, '[a-z0-9]+@[a-z]+\.[a-z]{2,3}'))
    ADD CONSTRAINT CHECK_PHONE_NUMBER_EMPLOYEE CHECK ( REGEXP_LIKE(phone_number, '^(\+4|)?(07[0-8]{1}[0-9]{1}|02[0-9]{2}|03[0-9]{2}){1}?(\s|\.|\-)?([0-9]{3}(\s|\.|\-|)){2}$') )
    ADD CONSTRAINT FK_SUPERIOR FOREIGN KEY (employee_id) REFERENCES RESTAURANT_EMPLOYEES(employee_id)
    ADD CONSTRAINT FK_LOCATION FOREIGN KEY (location_id) REFERENCES LOCATION_EMPLOYEES(location_id);

ALTER TABLE MEALS
    ADD CONSTRAINT FK_EMP FOREIGN KEY (employee_id) REFERENCES RESTAURANT_EMPLOYEES(employee_id);

ALTER TABLE MENU_DRINK
    ADD CONSTRAINT PK_MENU_DRINK PRIMARY KEY (menu_id, drink_id)
    ADD CONSTRAINT FK_MENU_D FOREIGN KEY (menu_id) REFERENCES MENUS(menu_id)
    ADD CONSTRAINT FK_DRINK FOREIGN KEY (drink_id) REFERENCES DRINKS(drink_id);

ALTER TABLE MENU_MEAL
    ADD CONSTRAINT PK_MENU_MEAL PRIMARY KEY (menu_id, meal_id)
    ADD CONSTRAINT FK_MENU_M FOREIGN KEY (menu_id) REFERENCES MENUS(menu_id)
    ADD CONSTRAINT FK_MEAL FOREIGN KEY (meal_id) REFERENCES MEALS(meal_id);

ALTER TABLE ORDERS
    ADD CONSTRAINT FK_CUSTOMER_ORDER FOREIGN KEY (customer_id) REFERENCES CUSTOMERS(customer_id)
    ADD CONSTRAINT FK_EMPLOYEE_ORDER FOREIGN KEY (employee_id) REFERENCES RESTAURANT_EMPLOYEES(employee_id)
    ADD CONSTRAINT CHECK_STATUS_ORDER CHECK ( status IN ('PENDING', 'COMPLETED') );

ALTER TABLE ORDER_MENU
    ADD CONSTRAINT PK_ORDER_MENU PRIMARY KEY (order_id, menu_id)
    ADD CONSTRAINT FK_ORDER FOREIGN KEY (order_id) REFERENCES ORDERS(order_id)
    ADD CONSTRAINT FK_MENU FOREIGN KEY (menu_id) REFERENCES MENUS(menu_id);